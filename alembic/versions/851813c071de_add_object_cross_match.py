"""Add object cross match

Revision ID: 851813c071de
Revises: 1f4da189227e
Create Date: 2021-07-21 09:15:16.457552

"""
from alembic import op
import social_sqlalchemy
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

import baselayer.app.models
import skyportal.models

# revision identifiers, used by Alembic.
revision = '851813c071de'
down_revision = '1f4da189227e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'acls',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_acls_created_at'), 'acls', ['created_at'], unique=False)
    op.create_table(
        'associations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('server_url', sa.String(length=255), nullable=True),
        sa.Column('handle', sa.String(length=255), nullable=True),
        sa.Column('secret', sa.String(length=255), nullable=True),
        sa.Column('issued', sa.Integer(), nullable=True),
        sa.Column('lifetime', sa.Integer(), nullable=True),
        sa.Column('assoc_type', sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('server_url', 'handle'),
    )
    op.create_index(
        op.f('ix_associations_created_at'), 'associations', ['created_at'], unique=False
    )
    op.create_table(
        'codes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('email', sa.String(length=200), nullable=True),
        sa.Column('code', sa.String(length=32), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code', 'email'),
    )
    op.create_index(op.f('ix_codes_code'), 'codes', ['code'], unique=False)
    op.create_index(op.f('ix_codes_created_at'), 'codes', ['created_at'], unique=False)
    op.create_table(
        'cronjobruns',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('script', sa.String(), nullable=False),
        sa.Column('exit_status', sa.Integer(), nullable=True),
        sa.Column('output', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_cronjobruns_created_at'), 'cronjobruns', ['created_at'], unique=False
    )
    op.create_table(
        'groups',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('nickname', sa.String(), nullable=True),
        sa.Column('private', sa.Boolean(), nullable=False),
        sa.Column('single_user_group', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_groups_created_at'), 'groups', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_index(op.f('ix_groups_nickname'), 'groups', ['nickname'], unique=True)
    op.create_index(op.f('ix_groups_private'), 'groups', ['private'], unique=False)
    op.create_index(
        op.f('ix_groups_single_user_group'),
        'groups',
        ['single_user_group'],
        unique=False,
    )
    op.create_table(
        'nonces',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('server_url', sa.String(length=255), nullable=True),
        sa.Column('timestamp', sa.Integer(), nullable=True),
        sa.Column('salt', sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('server_url', 'timestamp', 'salt'),
    )
    op.create_index(
        op.f('ix_nonces_created_at'), 'nonces', ['created_at'], unique=False
    )
    op.create_table(
        'objs',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('ra', sa.Float(), nullable=True),
        sa.Column('dec', sa.Float(), nullable=True),
        sa.Column('nested', sa.BigInteger(), nullable=True),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('ra_dis', sa.Float(), nullable=True),
        sa.Column('dec_dis', sa.Float(), nullable=True),
        sa.Column('ra_err', sa.Float(), nullable=True),
        sa.Column('dec_err', sa.Float(), nullable=True),
        sa.Column('offset', sa.Float(), nullable=True),
        sa.Column('redshift', sa.Float(), nullable=True),
        sa.Column('redshift_error', sa.Float(), nullable=True),
        sa.Column(
            'redshift_history', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('altdata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('dist_nearest_source', sa.Float(), nullable=True),
        sa.Column('mag_nearest_source', sa.Float(), nullable=True),
        sa.Column('e_mag_nearest_source', sa.Float(), nullable=True),
        sa.Column('transient', sa.Boolean(), nullable=True),
        sa.Column('varstar', sa.Boolean(), nullable=True),
        sa.Column('is_roid', sa.Boolean(), nullable=True),
        sa.Column('score', sa.Float(), nullable=True),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('alias', sa.ARRAY(sa.String()), nullable=True),
        sa.Column('internal_key', sa.String(), nullable=False),
        sa.Column('detect_photometry_count', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_objs_created_at'), 'objs', ['created_at'], unique=False)
    op.create_index(op.f('ix_objs_nested'), 'objs', ['nested'], unique=False)
    op.create_index(op.f('ix_objs_redshift'), 'objs', ['redshift'], unique=False)
    op.create_table(
        'partials',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('token', sa.String(length=32), nullable=True),
        sa.Column('data', social_sqlalchemy.storage.JSONType(), nullable=True),
        sa.Column('next_step', sa.Integer(), nullable=True),
        sa.Column('backend', sa.String(length=32), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_partials_created_at'), 'partials', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_partials_token'), 'partials', ['token'], unique=False)
    op.create_table(
        'roles',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_roles_created_at'), 'roles', ['created_at'], unique=False)
    op.create_table(
        'streams',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('altdata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_index(
        op.f('ix_streams_created_at'), 'streams', ['created_at'], unique=False
    )
    op.create_table(
        'taxonomies',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('hierarchy', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('provenance', sa.String(), nullable=True),
        sa.Column('version', sa.String(), nullable=False),
        sa.Column('isLatest', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_taxonomies_created_at'), 'taxonomies', ['created_at'], unique=False
    )
    op.create_table(
        'telescopes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('nickname', sa.String(), nullable=False),
        sa.Column('lat', sa.Float(), nullable=True),
        sa.Column('lon', sa.Float(), nullable=True),
        sa.Column('elevation', sa.Float(), nullable=True),
        sa.Column('diameter', sa.Float(), nullable=False),
        sa.Column('skycam_link', sqlalchemy_utils.types.url.URLType(), nullable=True),
        sa.Column('weather_link', sqlalchemy_utils.types.url.URLType(), nullable=True),
        sa.Column('robotic', sa.Boolean(), nullable=False),
        sa.Column(
            'fixed_location', sa.Boolean(), server_default='true', nullable=False
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_index(
        op.f('ix_telescopes_created_at'), 'telescopes', ['created_at'], unique=False
    )
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('username', baselayer.app.models.SlugifiedStr(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=True),
        sa.Column('last_name', sa.String(), nullable=True),
        sa.Column(
            'contact_email',
            sqlalchemy_utils.types.email.EmailType(length=255),
            nullable=True,
        ),
        sa.Column(
            'contact_phone',
            sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20),
            nullable=True,
        ),
        sa.Column('oauth_uid', sa.String(), nullable=True),
        sa.Column(
            'preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('expiration_date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('oauth_uid'),
        sa.UniqueConstraint('username'),
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_table(
        'annotations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('origin', sa.String(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('obj_id', 'origin'),
    )
    op.create_index(
        op.f('ix_annotations_author_id'), 'annotations', ['author_id'], unique=False
    )
    op.create_index(
        op.f('ix_annotations_created_at'), 'annotations', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_annotations_obj_id'), 'annotations', ['obj_id'], unique=False
    )
    op.create_index(
        op.f('ix_annotations_origin'), 'annotations', ['origin'], unique=False
    )
    op.create_table(
        'classifications',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('classification', sa.String(), nullable=False),
        sa.Column('taxonomy_id', sa.Integer(), nullable=False),
        sa.Column('probability', sa.Float(), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('author_name', sa.String(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['taxonomy_id'], ['taxonomies.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_classifications_author_id'),
        'classifications',
        ['author_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classifications_classification'),
        'classifications',
        ['classification'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classifications_created_at'),
        'classifications',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classifications_obj_id'), 'classifications', ['obj_id'], unique=False
    )
    op.create_index(
        op.f('ix_classifications_probability'),
        'classifications',
        ['probability'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classifications_taxonomy_id'),
        'classifications',
        ['taxonomy_id'],
        unique=False,
    )
    op.create_table(
        'comments',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('attachment_name', sa.String(), nullable=True),
        sa.Column('attachment_bytes', sa.LargeBinary(), nullable=True),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('bot', sa.Boolean(), server_default='false', nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_comments_author_id'), 'comments', ['author_id'], unique=False
    )
    op.create_index(
        op.f('ix_comments_created_at'), 'comments', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_comments_obj_id'), 'comments', ['obj_id'], unique=False)
    op.create_table(
        'filters',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_filters_created_at'), 'filters', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_filters_group_id'), 'filters', ['group_id'], unique=False)
    op.create_index(
        op.f('ix_filters_stream_id'), 'filters', ['stream_id'], unique=False
    )
    op.create_table(
        'gcnevents',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('dateobs'),
    )
    op.create_index(
        op.f('ix_gcnevents_created_at'), 'gcnevents', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_gcnevents_sent_by_id'), 'gcnevents', ['sent_by_id'], unique=False
    )
    op.create_table(
        'group_streams',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_streams_forward_ind',
        'group_streams',
        ['group_id', 'stream_id'],
        unique=True,
    )
    op.create_index(
        'group_streams_reverse_ind',
        'group_streams',
        ['stream_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_streams_created_at'),
        'group_streams',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_taxonomy',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('taxonomie_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['taxonomie_id'], ['taxonomies.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_taxonomy_forward_ind',
        'group_taxonomy',
        ['group_id', 'taxonomie_id'],
        unique=True,
    )
    op.create_index(
        'group_taxonomy_reverse_ind',
        'group_taxonomy',
        ['taxonomie_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_taxonomy_created_at'),
        'group_taxonomy',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_users',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('admin', sa.Boolean(), nullable=False),
        sa.Column('can_save', sa.Boolean(), server_default='true', nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_users_forward_ind', 'group_users', ['group_id', 'user_id'], unique=True
    )
    op.create_index(
        'group_users_reverse_ind', 'group_users', ['user_id', 'group_id'], unique=False
    )
    op.create_index(
        op.f('ix_group_users_created_at'), 'group_users', ['created_at'], unique=False
    )
    op.create_table(
        'groupadmissionrequests',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column(
            'status',
            sa.Enum('pending', 'accepted', 'declined', name='admission_request_status'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_groupadmissionrequests_created_at'),
        'groupadmissionrequests',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_groupadmissionrequests_group_id'),
        'groupadmissionrequests',
        ['group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_groupadmissionrequests_user_id'),
        'groupadmissionrequests',
        ['user_id'],
        unique=False,
    )
    op.create_table(
        'instruments',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column(
            'type',
            sa.Enum(
                'imager',
                'spectrograph',
                'imaging spectrograph',
                name='instrument_types',
            ),
            nullable=False,
        ),
        sa.Column('band', sa.String(), nullable=True),
        sa.Column('telescope_id', sa.Integer(), nullable=False),
        sa.Column(
            'filters',
            skyportal.models.ArrayOfEnum(
                sa.Enum(
                    'bessellux',
                    'bessellb',
                    'bessellv',
                    'bessellr',
                    'besselli',
                    'standard::u',
                    'standard::b',
                    'standard::v',
                    'standard::r',
                    'standard::i',
                    'desg',
                    'desr',
                    'desi',
                    'desz',
                    'desy',
                    'sdssu',
                    'sdssg',
                    'sdssr',
                    'sdssi',
                    'sdssz',
                    'f435w',
                    'f475w',
                    'f555w',
                    'f606w',
                    'f625w',
                    'f775w',
                    'f850lp',
                    'nicf110w',
                    'nicf160w',
                    'f098m',
                    'f105w',
                    'f110w',
                    'f125w',
                    'f127m',
                    'f139m',
                    'f140w',
                    'f153m',
                    'f160w',
                    'f218w',
                    'f225w',
                    'f275w',
                    'f300x',
                    'f336w',
                    'f350lp',
                    'f390w',
                    'f689m',
                    'f763m',
                    'f845m',
                    'f438w',
                    'uvf475w',
                    'uvf555w',
                    'uvf606w',
                    'uvf625w',
                    'uvf775w',
                    'uvf814w',
                    'uvf850lp',
                    'kepler',
                    'cspb',
                    'csphs',
                    'csphd',
                    'cspjs',
                    'cspjd',
                    'cspv3009',
                    'cspv3014',
                    'cspv9844',
                    'cspys',
                    'cspyd',
                    'cspg',
                    'cspi',
                    'cspk',
                    'cspr',
                    'cspu',
                    'f070w',
                    'f090w',
                    'f115w',
                    'f150w',
                    'f200w',
                    'f277w',
                    'f356w',
                    'f444w',
                    'f140m',
                    'f162m',
                    'f182m',
                    'f210m',
                    'f250m',
                    'f300m',
                    'f335m',
                    'f360m',
                    'f410m',
                    'f430m',
                    'f460m',
                    'f480m',
                    'f560w',
                    'f770w',
                    'f1000w',
                    'f1130w',
                    'f1280w',
                    'f1500w',
                    'f1800w',
                    'f2100w',
                    'f2550w',
                    'f1065c',
                    'f1140c',
                    'f1550c',
                    'f2300c',
                    'lsstu',
                    'lsstg',
                    'lsstr',
                    'lssti',
                    'lsstz',
                    'lssty',
                    'keplercam::us',
                    'keplercam::b',
                    'keplercam::v',
                    'keplercam::r',
                    'keplercam::i',
                    '4shooter2::us',
                    '4shooter2::b',
                    '4shooter2::v',
                    '4shooter2::r',
                    '4shooter2::i',
                    'ztfg',
                    'ztfr',
                    'ztfi',
                    'uvot::b',
                    'uvot::u',
                    'uvot::uvm2',
                    'uvot::uvw1',
                    'uvot::uvw2',
                    'uvot::v',
                    'uvot::white',
                    name='bandpasses',
                )
            ),
            nullable=False,
        ),
        sa.Column(
            'api_classname',
            sa.Enum(
                'SEDMAPI',
                'IOOAPI',
                'IOIAPI',
                'SPRATAPI',
                'SINISTROAPI',
                'SPECTRALAPI',
                'FLOYDSAPI',
                'MUSCATAPI',
                'ZTFAPI',
                name='followup_apis',
            ),
            nullable=True,
        ),
        sa.Column(
            'listener_classname',
            sa.Enum('SEDMListener', name='followup_listeners'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['telescope_id'], ['telescopes.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_index(
        op.f('ix_instruments_created_at'), 'instruments', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_instruments_telescope_id'),
        'instruments',
        ['telescope_id'],
        unique=False,
    )
    op.create_table(
        'invitations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('token', sa.String(), nullable=False),
        sa.Column('role_id', sa.String(), nullable=False),
        sa.Column('admin_for_groups', postgresql.ARRAY(sa.Boolean()), nullable=False),
        sa.Column('can_save_to_groups', postgresql.ARRAY(sa.Boolean()), nullable=False),
        sa.Column(
            'user_email',
            sqlalchemy_utils.types.email.EmailType(length=255),
            nullable=True,
        ),
        sa.Column('used', sa.Boolean(), nullable=False),
        sa.Column('user_expiration_date', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('token'),
    )
    op.create_index(
        op.f('ix_invitations_created_at'), 'invitations', ['created_at'], unique=False
    )
    op.create_table(
        'listings',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('list_name', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_listings_created_at'), 'listings', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_listings_list_name'), 'listings', ['list_name'], unique=False
    )
    op.create_index(op.f('ix_listings_obj_id'), 'listings', ['obj_id'], unique=False)
    op.create_index(op.f('ix_listings_user_id'), 'listings', ['user_id'], unique=False)
    op.create_index(
        'listings_main_index',
        'listings',
        ['user_id', 'obj_id', 'list_name'],
        unique=True,
    )
    op.create_index(
        'listings_reverse_index',
        'listings',
        ['list_name', 'obj_id', 'user_id'],
        unique=True,
    )
    op.create_table(
        'role_acls',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.String(), nullable=False),
        sa.Column('acl_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['acl_id'], ['acls.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_role_acls_created_at'), 'role_acls', ['created_at'], unique=False
    )
    op.create_index(
        'role_acls_forward_ind', 'role_acls', ['role_id', 'acl_id'], unique=True
    )
    op.create_index(
        'role_acls_reverse_ind', 'role_acls', ['acl_id', 'role_id'], unique=False
    )
    op.create_table(
        'sourcenotifications',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('source_id', sa.String(), nullable=False),
        sa.Column('additional_notes', sa.String(), nullable=True),
        sa.Column('level', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['source_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_sourcenotifications_created_at'),
        'sourcenotifications',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_sourcenotifications_sent_by_id'),
        'sourcenotifications',
        ['sent_by_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_sourcenotifications_source_id'),
        'sourcenotifications',
        ['source_id'],
        unique=False,
    )
    op.create_table(
        'sources',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('saved_by_id', sa.Integer(), nullable=True),
        sa.Column('saved_at', sa.DateTime(), nullable=False),
        sa.Column('active', sa.Boolean(), server_default='true', nullable=True),
        sa.Column('requested', sa.Boolean(), server_default='false', nullable=True),
        sa.Column('unsaved_by_id', sa.Integer(), nullable=True),
        sa.Column('unsaved_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['saved_by_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['unsaved_by_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_sources_created_at'), 'sources', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_sources_saved_at'), 'sources', ['saved_at'], unique=False)
    op.create_index(
        op.f('ix_sources_saved_by_id'), 'sources', ['saved_by_id'], unique=False
    )
    op.create_index(
        op.f('ix_sources_unsaved_by_id'), 'sources', ['unsaved_by_id'], unique=False
    )
    op.create_index(
        'sources_forward_ind', 'sources', ['group_id', 'obj_id'], unique=True
    )
    op.create_index(
        'sources_reverse_ind', 'sources', ['obj_id', 'group_id'], unique=False
    )
    op.create_table(
        'sourceviews',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('username_or_token_id', sa.String(), nullable=False),
        sa.Column('is_token', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_sourceviews_created_at'), 'sourceviews', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_sourceviews_obj_id'), 'sourceviews', ['obj_id'], unique=False
    )
    op.create_table(
        'stream_users',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_stream_users_created_at'), 'stream_users', ['created_at'], unique=False
    )
    op.create_index(
        'stream_users_forward_ind',
        'stream_users',
        ['stream_id', 'user_id'],
        unique=True,
    )
    op.create_index(
        'stream_users_reverse_ind',
        'stream_users',
        ['user_id', 'stream_id'],
        unique=False,
    )
    op.create_table(
        'thumbnails',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column(
            'type',
            sa.Enum(
                'new',
                'ref',
                'sub',
                'sdss',
                'dr8',
                'ps1',
                'new_gz',
                'ref_gz',
                'sub_gz',
                name='thumbnail_types',
            ),
            nullable=True,
        ),
        sa.Column('file_uri', sa.String(), nullable=True),
        sa.Column('public_url', sa.String(), nullable=True),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('is_grayscale', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_thumbnails_created_at'), 'thumbnails', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_thumbnails_obj_id'), 'thumbnails', ['obj_id'], unique=False
    )
    op.create_table(
        'tokens',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_by_id', sa.Integer(), nullable=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
    )
    op.create_index(
        op.f('ix_tokens_created_at'), 'tokens', ['created_at'], unique=False
    )
    op.create_table(
        'user_acls',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('acl_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['acl_id'], ['acls.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_user_acls_created_at'), 'user_acls', ['created_at'], unique=False
    )
    op.create_index(
        'user_acls_forward_ind', 'user_acls', ['user_id', 'acl_id'], unique=True
    )
    op.create_index(
        'user_acls_reverse_ind', 'user_acls', ['acl_id', 'user_id'], unique=False
    )
    op.create_table(
        'user_roles',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('role_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_user_roles_created_at'), 'user_roles', ['created_at'], unique=False
    )
    op.create_index(
        'user_roles_forward_ind', 'user_roles', ['user_id', 'role_id'], unique=True
    )
    op.create_index(
        'user_roles_reverse_ind', 'user_roles', ['role_id', 'user_id'], unique=False
    )
    op.create_table(
        'usernotifications',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('viewed', sa.Boolean(), nullable=False),
        sa.Column('url', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_usernotifications_created_at'),
        'usernotifications',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_usernotifications_user_id'),
        'usernotifications',
        ['user_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_usernotifications_viewed'),
        'usernotifications',
        ['viewed'],
        unique=False,
    )
    op.create_table(
        'usersocialauths',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('provider', sa.String(length=32), nullable=True),
        sa.Column('uid', sa.String(length=255), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('extra_data', social_sqlalchemy.storage.JSONType(), nullable=True),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('provider', 'uid'),
    )
    op.create_index(
        op.f('ix_usersocialauths_created_at'),
        'usersocialauths',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_usersocialauths_user_id'), 'usersocialauths', ['user_id'], unique=False
    )
    op.create_table(
        'weathers',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column(
            'weather_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('retrieved_at', sa.DateTime(), nullable=True),
        sa.Column('telescope_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['telescope_id'], ['telescopes.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_weathers_created_at'), 'weathers', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_weathers_telescope_id'), 'weathers', ['telescope_id'], unique=True
    )
    op.create_table(
        'allocations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('pi', sa.String(), nullable=True),
        sa.Column('proposal_id', sa.String(), nullable=True),
        sa.Column('start_date', sa.DateTime(), nullable=True),
        sa.Column('end_date', sa.DateTime(), nullable=True),
        sa.Column('hours_allocated', sa.Float(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column(
            '_altdata',
            sqlalchemy_utils.types.encrypted.encrypted_type.EncryptedType(),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_allocations_created_at'), 'allocations', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_allocations_group_id'), 'allocations', ['group_id'], unique=False
    )
    op.create_index(
        op.f('ix_allocations_instrument_id'),
        'allocations',
        ['instrument_id'],
        unique=False,
    )
    op.create_table(
        'candidates',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('filter_id', sa.Integer(), nullable=False),
        sa.Column('passed_at', sa.DateTime(), nullable=False),
        sa.Column('passing_alert_id', sa.BigInteger(), nullable=True),
        sa.Column('uploader_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['filter_id'], ['filters.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'candidates_main_index',
        'candidates',
        ['obj_id', 'filter_id', 'passed_at'],
        unique=True,
    )
    op.create_index(
        op.f('ix_candidates_created_at'), 'candidates', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_candidates_filter_id'), 'candidates', ['filter_id'], unique=False
    )
    op.create_index(
        op.f('ix_candidates_obj_id'), 'candidates', ['obj_id'], unique=False
    )
    op.create_index(
        op.f('ix_candidates_passed_at'), 'candidates', ['passed_at'], unique=False
    )
    op.create_index(
        op.f('ix_candidates_passing_alert_id'),
        'candidates',
        ['passing_alert_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_candidates_uploader_id'), 'candidates', ['uploader_id'], unique=False
    )
    op.create_table(
        'gcnnotices',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('ivorn', sa.String(), nullable=True),
        sa.Column(
            'notice_type',
            sa.Enum(
                'GRB_COORDS',
                'TEST_COORDS',
                'IM_ALIVE',
                'KILL_SOCKET',
                'MAXBC',
                'BRAD_COORDS',
                'GRB_FINAL',
                'HUNTS_SRC',
                'ALEXIS_SRC',
                'XTE_PCA_ALERT',
                'XTE_PCA_SRC',
                'XTE_ASM_ALERT',
                'XTE_ASM_SRC',
                'COMPTEL_SRC',
                'IPN_RAW',
                'IPN_SEG',
                'SAX_WFC_ALERT',
                'SAX_WFC_SRC',
                'SAX_NFI_ALERT',
                'SAX_NFI_SRC',
                'XTE_ASM_TRANS',
                'spare38',
                'IPN_POS',
                'HETE_ALERT_SRC',
                'HETE_UPDATE_SRC',
                'HETE_FINAL_SRC',
                'HETE_GNDANA_SRC',
                'HETE_TEST',
                'GRB_CNTRPART',
                'SWIFT_TOO_FOM',
                'SWIFT_TOO_SC_SLEW',
                'DOW_TOD',
                'spare50',
                'INTEGRAL_POINTDIR',
                'INTEGRAL_SPIACS',
                'INTEGRAL_WAKEUP',
                'INTEGRAL_REFINED',
                'INTEGRAL_OFFLINE',
                'INTEGRAL_WEAK',
                'AAVSO',
                'MILAGRO_POS',
                'KONUS_LC',
                'SWIFT_BAT_GRB_ALERT',
                'SWIFT_BAT_GRB_POS_ACK',
                'SWIFT_BAT_GRB_POS_NACK',
                'SWIFT_BAT_GRB_LC',
                'SWIFT_BAT_SCALEDMAP',
                'SWIFT_FOM_OBS',
                'SWIFT_SC_SLEW',
                'SWIFT_XRT_POSITION',
                'SWIFT_XRT_SPECTRUM',
                'SWIFT_XRT_IMAGE',
                'SWIFT_XRT_LC',
                'SWIFT_XRT_CENTROID',
                'SWIFT_UVOT_DBURST',
                'SWIFT_UVOT_FCHART',
                'SWIFT_BAT_GRB_LC_PROC',
                'SWIFT_XRT_SPECTRUM_PROC',
                'SWIFT_XRT_IMAGE_PROC',
                'SWIFT_UVOT_DBURST_PROC',
                'SWIFT_UVOT_FCHART_PROC',
                'SWIFT_UVOT_POS',
                'SWIFT_BAT_GRB_POS_TEST',
                'SWIFT_POINTDIR',
                'SWIFT_BAT_TRANS',
                'SWIFT_XRT_THRESHPIX',
                'SWIFT_XRT_THRESHPIX_PROC',
                'SWIFT_XRT_SPER',
                'SWIFT_XRT_SPER_PROC',
                'SWIFT_UVOT_POS_NACK',
                'SWIFT_BAT_ALARM_SHORT',
                'SWIFT_BAT_ALARM_LONG',
                'SWIFT_UVOT_EMERGENCY',
                'SWIFT_XRT_EMERGENCY',
                'SWIFT_FOM_PPT_ARG_ERR',
                'SWIFT_FOM_SAFE_POINT',
                'SWIFT_FOM_SLEW_ABORT',
                'SWIFT_BAT_QL_POS',
                'SWIFT_BAT_SUB_THRESHOLD',
                'SWIFT_BAT_SLEW_POS',
                'AGILE_GRB_WAKEUP',
                'AGILE_GRB_GROUND',
                'AGILE_GRB_REFINED',
                'SWIFT_ACTUAL_POINTDIR',
                'AGILE_MCAL_ALERT',
                'AGILE_POINTDIR',
                'AGILE_TRANS',
                'AGILE_GRB_POS_TEST',
                'FERMI_GBM_ALERT',
                'FERMI_GBM_FLT_POS',
                'FERMI_GBM_GND_POS',
                'FERMI_GBM_LC',
                'FERMI_GBM_GND_INTERNAL',
                'FERMI_GBM_FIN_POS',
                'FERMI_GBM_ALERT_INTERNAL',
                'FERMI_GBM_FLT_INTERNAL',
                'FERMI_GBM_TRANS',
                'FERMI_GBM_POS_TEST',
                'FERMI_LAT_POS_INI',
                'FERMI_LAT_POS_UPD',
                'FERMI_LAT_POS_DIAG',
                'FERMI_LAT_TRANS',
                'FERMI_LAT_POS_TEST',
                'FERMI_LAT_MONITOR',
                'FERMI_SC_SLEW',
                'FERMI_LAT_GND',
                'FERMI_LAT_OFFLINE',
                'FERMI_POINTDIR',
                'SIMBADNED',
                'FERMI_GBM_SUBTHRESH',
                'SWIFT_BAT_MONITOR',
                'MAXI_UNKNOWN',
                'MAXI_KNOWN',
                'MAXI_TEST',
                'OGLE',
                'CBAT',
                'MOA',
                'SWIFT_BAT_SUBSUB',
                'SWIFT_BAT_KNOWN_SRC',
                'VOE_11_IM_ALIVE',
                'VOE_20_IM_ALIVE',
                'FERMI_SC_SLEW_INTERNAL',
                'COINCIDENCE',
                'FERMI_GBM_FIN_INTERNAL',
                'SUZAKU_LC',
                'SNEWS',
                'LVC_PRELIMINARY',
                'LVC_INITIAL',
                'LVC_UPDATE',
                'LVC_TEST',
                'LVC_COUNTERPART',
                'AMON_ICECUBE_COINC',
                'AMON_ICECUBE_HESE',
                'CALET_GBM_FLT_LC',
                'CALET_GBM_GND_LC',
                'LVC_EARLY_WARNING',
                'LVC_RETRACTION',
                'GWHEN_COINC',
                'AMON_ICECUBE_EHE',
                'HAWC_BURST_MONITOR',
                'AMON_NU_EM_COINC',
                'ICECUBE_ASTROTRACK_GOLD',
                'ICECUBE_ASTROTRACK_BRONZE',
                'ICECUBE_CASCADE',
                name='noticetype',
            ),
            nullable=False,
        ),
        sa.Column('stream', sa.String(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.Column('content', sa.LargeBinary(), nullable=False),
        sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_gcnnotices_created_at'), 'gcnnotices', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_gcnnotices_ivorn'), 'gcnnotices', ['ivorn'], unique=True)
    op.create_index(
        op.f('ix_gcnnotices_sent_by_id'), 'gcnnotices', ['sent_by_id'], unique=False
    )
    op.create_table(
        'gcntags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.Column('text', sa.Unicode(), nullable=False),
        sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_gcntags_created_at'), 'gcntags', ['created_at'], unique=False
    )
    op.create_index(op.f('ix_gcntags_dateobs'), 'gcntags', ['dateobs'], unique=False)
    op.create_index(
        op.f('ix_gcntags_sent_by_id'), 'gcntags', ['sent_by_id'], unique=False
    )
    op.create_table(
        'group_annotations',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('annotation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['annotation_id'], ['annotations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_annotations_forward_ind',
        'group_annotations',
        ['group_id', 'annotation_id'],
        unique=True,
    )
    op.create_index(
        'group_annotations_reverse_ind',
        'group_annotations',
        ['annotation_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_annotations_created_at'),
        'group_annotations',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_classifications',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('classification_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['classification_id'], ['classifications.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_classifications_forward_ind',
        'group_classifications',
        ['group_id', 'classification_id'],
        unique=True,
    )
    op.create_index(
        'group_classifications_reverse_ind',
        'group_classifications',
        ['classification_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_classifications_created_at'),
        'group_classifications',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_comments',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('comment_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_comments_forward_ind',
        'group_comments',
        ['group_id', 'comment_id'],
        unique=True,
    )
    op.create_index(
        'group_comments_reverse_ind',
        'group_comments',
        ['comment_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_comments_created_at'),
        'group_comments',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_invitations',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('invitation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['invitation_id'], ['invitations.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_invitations_forward_ind',
        'group_invitations',
        ['group_id', 'invitation_id'],
        unique=True,
    )
    op.create_index(
        'group_invitations_reverse_ind',
        'group_invitations',
        ['invitation_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_invitations_created_at'),
        'group_invitations',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_notifications',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('sourcenotification_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['sourcenotification_id'], ['sourcenotifications.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_notifications_forward_ind',
        'group_notifications',
        ['group_id', 'sourcenotification_id'],
        unique=True,
    )
    op.create_index(
        'group_notifications_reverse_ind',
        'group_notifications',
        ['sourcenotification_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_notifications_created_at'),
        'group_notifications',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'localizations',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('sent_by_id', sa.Integer(), nullable=False),
        sa.Column('dateobs', sa.DateTime(), nullable=False),
        sa.Column('localization_name', sa.String(), nullable=True),
        sa.Column('uniq', sa.ARRAY(sa.BigInteger()), nullable=False),
        sa.Column('probdensity', sa.ARRAY(sa.Float()), nullable=False),
        sa.Column('distmu', sa.ARRAY(sa.Float()), nullable=True),
        sa.Column('distsigma', sa.ARRAY(sa.Float()), nullable=True),
        sa.Column('distnorm', sa.ARRAY(sa.Float()), nullable=True),
        sa.Column('contour', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(['dateobs'], ['gcnevents.dateobs'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['sent_by_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_localizations_created_at'),
        'localizations',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_localizations_dateobs'), 'localizations', ['dateobs'], unique=False
    )
    op.create_index(
        op.f('ix_localizations_localization_name'),
        'localizations',
        ['localization_name'],
        unique=False,
    )
    op.create_index(
        op.f('ix_localizations_sent_by_id'),
        'localizations',
        ['sent_by_id'],
        unique=False,
    )
    op.create_table(
        'observingruns',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('pi', sa.String(), nullable=True),
        sa.Column('observers', sa.String(), nullable=True),
        sa.Column('group_id', sa.Integer(), nullable=True),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.Column('calendar_date', sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_observingruns_calendar_date'),
        'observingruns',
        ['calendar_date'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observingruns_created_at'),
        'observingruns',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observingruns_group_id'), 'observingruns', ['group_id'], unique=False
    )
    op.create_index(
        op.f('ix_observingruns_instrument_id'),
        'observingruns',
        ['instrument_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_observingruns_owner_id'), 'observingruns', ['owner_id'], unique=False
    )
    op.create_table(
        'stream_invitations',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.Column('invitation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['invitation_id'], ['invitations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_stream_invitations_created_at'),
        'stream_invitations',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'stream_invitations_forward_ind',
        'stream_invitations',
        ['stream_id', 'invitation_id'],
        unique=True,
    )
    op.create_index(
        'stream_invitations_reverse_ind',
        'stream_invitations',
        ['invitation_id', 'stream_id'],
        unique=False,
    )
    op.create_table(
        'token_acls',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('token_id', sa.String(), nullable=False),
        sa.Column('acl_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['acl_id'], ['acls.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_token_acls_created_at'), 'token_acls', ['created_at'], unique=False
    )
    op.create_index(
        'token_acls_forward_ind', 'token_acls', ['token_id', 'acl_id'], unique=True
    )
    op.create_index(
        'token_acls_reverse_ind', 'token_acls', ['acl_id', 'token_id'], unique=False
    )
    op.create_table(
        'user_invitations',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('invitation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['invitation_id'], ['invitations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_user_invitations_created_at'),
        'user_invitations',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'user_invitations_forward_ind',
        'user_invitations',
        ['user_id', 'invitation_id'],
        unique=True,
    )
    op.create_index(
        'user_invitations_reverse_ind',
        'user_invitations',
        ['invitation_id', 'user_id'],
        unique=False,
    )
    op.create_table(
        'classicalassignments',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('requester_id', sa.Integer(), nullable=False),
        sa.Column('last_modified_by_id', sa.Integer(), nullable=True),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('comment', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column(
            'priority',
            sa.Enum('1', '2', '3', '4', '5', name='followup_priorities'),
            nullable=False,
        ),
        sa.Column('run_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['last_modified_by_id'], ['users.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['run_id'], ['observingruns.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_classicalassignments_created_at'),
        'classicalassignments',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classicalassignments_last_modified_by_id'),
        'classicalassignments',
        ['last_modified_by_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classicalassignments_obj_id'),
        'classicalassignments',
        ['obj_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classicalassignments_requester_id'),
        'classicalassignments',
        ['requester_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_classicalassignments_run_id'),
        'classicalassignments',
        ['run_id'],
        unique=False,
    )
    op.create_table(
        'followuprequests',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('requester_id', sa.Integer(), nullable=True),
        sa.Column('last_modified_by_id', sa.Integer(), nullable=True),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('allocation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['allocation_id'], ['allocations.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['last_modified_by_id'], ['users.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_followuprequests_allocation_id'),
        'followuprequests',
        ['allocation_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_followuprequests_created_at'),
        'followuprequests',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_followuprequests_obj_id'), 'followuprequests', ['obj_id'], unique=False
    )
    op.create_index(
        op.f('ix_followuprequests_requester_id'),
        'followuprequests',
        ['requester_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_followuprequests_status'), 'followuprequests', ['status'], unique=False
    )
    op.create_table(
        'localizationtiles',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('nested_lo', sa.BigInteger(), nullable=False),
        sa.Column('nested_hi', sa.BigInteger(), nullable=False),
        sa.Column('localization_id', sa.Integer(), nullable=False),
        sa.Column('probdensity', sa.Float(), nullable=False),
        sa.Column('cumprob', sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ['localization_id'], ['localizations.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id', 'nested_lo'),
    )
    op.create_index(
        op.f('ix_localizationtiles_created_at'),
        'localizationtiles',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_localizationtiles_nested_lo'),
        'localizationtiles',
        ['nested_lo'],
        unique=False,
    )
    op.create_table(
        'facilitytransactions',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('request', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('followup_request_id', sa.Integer(), nullable=True),
        sa.Column('initiator_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['followup_request_id'], ['followuprequests.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(['initiator_id'], ['users.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_facilitytransactions_created_at'),
        'facilitytransactions',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_facilitytransactions_followup_request_id'),
        'facilitytransactions',
        ['followup_request_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_facilitytransactions_initiator_id'),
        'facilitytransactions',
        ['initiator_id'],
        unique=False,
    )
    op.create_table(
        'photometry',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('ra', sa.Float(), nullable=True),
        sa.Column('dec', sa.Float(), nullable=True),
        sa.Column('nested', sa.BigInteger(), nullable=True),
        sa.Column('mjd', sa.Float(), nullable=False),
        sa.Column('flux', sa.Float(), server_default='NaN', nullable=False),
        sa.Column('fluxerr', sa.Float(), nullable=False),
        sa.Column(
            'filter',
            sa.Enum(
                'bessellux',
                'bessellb',
                'bessellv',
                'bessellr',
                'besselli',
                'standard::u',
                'standard::b',
                'standard::v',
                'standard::r',
                'standard::i',
                'desg',
                'desr',
                'desi',
                'desz',
                'desy',
                'sdssu',
                'sdssg',
                'sdssr',
                'sdssi',
                'sdssz',
                'f435w',
                'f475w',
                'f555w',
                'f606w',
                'f625w',
                'f775w',
                'f850lp',
                'nicf110w',
                'nicf160w',
                'f098m',
                'f105w',
                'f110w',
                'f125w',
                'f127m',
                'f139m',
                'f140w',
                'f153m',
                'f160w',
                'f218w',
                'f225w',
                'f275w',
                'f300x',
                'f336w',
                'f350lp',
                'f390w',
                'f689m',
                'f763m',
                'f845m',
                'f438w',
                'uvf475w',
                'uvf555w',
                'uvf606w',
                'uvf625w',
                'uvf775w',
                'uvf814w',
                'uvf850lp',
                'kepler',
                'cspb',
                'csphs',
                'csphd',
                'cspjs',
                'cspjd',
                'cspv3009',
                'cspv3014',
                'cspv9844',
                'cspys',
                'cspyd',
                'cspg',
                'cspi',
                'cspk',
                'cspr',
                'cspu',
                'f070w',
                'f090w',
                'f115w',
                'f150w',
                'f200w',
                'f277w',
                'f356w',
                'f444w',
                'f140m',
                'f162m',
                'f182m',
                'f210m',
                'f250m',
                'f300m',
                'f335m',
                'f360m',
                'f410m',
                'f430m',
                'f460m',
                'f480m',
                'f560w',
                'f770w',
                'f1000w',
                'f1130w',
                'f1280w',
                'f1500w',
                'f1800w',
                'f2100w',
                'f2550w',
                'f1065c',
                'f1140c',
                'f1550c',
                'f2300c',
                'lsstu',
                'lsstg',
                'lsstr',
                'lssti',
                'lsstz',
                'lssty',
                'keplercam::us',
                'keplercam::b',
                'keplercam::v',
                'keplercam::r',
                'keplercam::i',
                '4shooter2::us',
                '4shooter2::b',
                '4shooter2::v',
                '4shooter2::r',
                '4shooter2::i',
                'ztfg',
                'ztfr',
                'ztfi',
                'uvot::b',
                'uvot::u',
                'uvot::uvm2',
                'uvot::uvw1',
                'uvot::uvw2',
                'uvot::v',
                'uvot::white',
                name='bandpasses',
            ),
            nullable=False,
        ),
        sa.Column('ra_unc', sa.Float(), nullable=True),
        sa.Column('dec_unc', sa.Float(), nullable=True),
        sa.Column(
            'original_user_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column('altdata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('upload_id', sa.String(), nullable=False),
        sa.Column('origin', sa.String(), server_default='', nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('followup_request_id', sa.Integer(), nullable=True),
        sa.Column('assignment_id', sa.Integer(), nullable=True),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['assignment_id'],
            ['classicalassignments.id'],
        ),
        sa.ForeignKeyConstraint(
            ['followup_request_id'],
            ['followuprequests.id'],
        ),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'deduplication_index',
        'photometry',
        ['obj_id', 'instrument_id', 'origin', 'mjd', 'fluxerr', 'flux'],
        unique=True,
    )
    op.create_index(
        op.f('ix_photometry_assignment_id'),
        'photometry',
        ['assignment_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometry_created_at'), 'photometry', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_photometry_followup_request_id'),
        'photometry',
        ['followup_request_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_photometry_instrument_id'),
        'photometry',
        ['instrument_id'],
        unique=False,
    )
    op.create_index(op.f('ix_photometry_mjd'), 'photometry', ['mjd'], unique=False)
    op.create_index(
        op.f('ix_photometry_nested'), 'photometry', ['nested'], unique=False
    )
    op.create_index(
        op.f('ix_photometry_obj_id'), 'photometry', ['obj_id'], unique=False
    )
    op.create_index(
        op.f('ix_photometry_origin'), 'photometry', ['origin'], unique=False
    )
    op.create_index(
        op.f('ix_photometry_owner_id'), 'photometry', ['owner_id'], unique=False
    )
    op.create_table(
        'request_groups',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('followuprequest_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['followuprequest_id'], ['followuprequests.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_request_groups_created_at'),
        'request_groups',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'request_groups_forward_ind',
        'request_groups',
        ['followuprequest_id', 'group_id'],
        unique=True,
    )
    op.create_index(
        'request_groups_reverse_ind',
        'request_groups',
        ['group_id', 'followuprequest_id'],
        unique=False,
    )
    op.create_table(
        'spectra',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column(
            'wavelengths', skyportal.models.NumpyArray(sa.Float()), nullable=False
        ),
        sa.Column('fluxes', skyportal.models.NumpyArray(sa.Float()), nullable=False),
        sa.Column('errors', skyportal.models.NumpyArray(sa.Float()), nullable=True),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.Column('observed_at', sa.DateTime(), nullable=False),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('instrument_id', sa.Integer(), nullable=False),
        sa.Column('followup_request_id', sa.Integer(), nullable=True),
        sa.Column('assignment_id', sa.Integer(), nullable=True),
        sa.Column('altdata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('original_file_string', sa.String(), nullable=True),
        sa.Column('original_file_filename', sa.String(), nullable=True),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['assignment_id'], ['classicalassignments.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['followup_request_id'], ['followuprequests.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(
            ['instrument_id'], ['instruments.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_spectra_created_at'), 'spectra', ['created_at'], unique=False
    )
    op.create_index(
        op.f('ix_spectra_instrument_id'), 'spectra', ['instrument_id'], unique=False
    )
    op.create_index(op.f('ix_spectra_obj_id'), 'spectra', ['obj_id'], unique=False)
    op.create_index(op.f('ix_spectra_owner_id'), 'spectra', ['owner_id'], unique=False)
    op.create_table(
        'comments_on_spectra',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('attachment_name', sa.String(), nullable=True),
        sa.Column('attachment_bytes', sa.LargeBinary(), nullable=True),
        sa.Column('origin', sa.String(), nullable=True),
        sa.Column('bot', sa.Boolean(), server_default='false', nullable=False),
        sa.Column('spectrum_id', sa.Integer(), nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=False),
        sa.Column('obj_id', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['obj_id'], ['objs.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['spectrum_id'], ['spectra.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_comments_on_spectra_author_id'),
        'comments_on_spectra',
        ['author_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_comments_on_spectra_created_at'),
        'comments_on_spectra',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        op.f('ix_comments_on_spectra_obj_id'),
        'comments_on_spectra',
        ['obj_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_comments_on_spectra_spectrum_id'),
        'comments_on_spectra',
        ['spectrum_id'],
        unique=False,
    )
    op.create_table(
        'group_photometry',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('photometr_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['photometr_id'], ['photometry.id'], ondelete='CASCADE'
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_photometry_forward_ind',
        'group_photometry',
        ['group_id', 'photometr_id'],
        unique=True,
    )
    op.create_index(
        'group_photometry_reverse_ind',
        'group_photometry',
        ['photometr_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_photometry_created_at'),
        'group_photometry',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'group_spectra',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('spectr_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['spectr_id'], ['spectra.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_spectra_forward_ind',
        'group_spectra',
        ['group_id', 'spectr_id'],
        unique=True,
    )
    op.create_index(
        'group_spectra_reverse_ind',
        'group_spectra',
        ['spectr_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_spectra_created_at'),
        'group_spectra',
        ['created_at'],
        unique=False,
    )
    op.create_table(
        'spectrum_observers',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('spectr_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['spectr_id'], ['spectra.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_spectrum_observers_created_at'),
        'spectrum_observers',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'spectrum_observers_forward_ind',
        'spectrum_observers',
        ['spectr_id', 'user_id'],
        unique=True,
    )
    op.create_index(
        'spectrum_observers_reverse_ind',
        'spectrum_observers',
        ['user_id', 'spectr_id'],
        unique=False,
    )
    op.create_table(
        'spectrum_reducers',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('spectr_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['spectr_id'], ['spectra.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_spectrum_reducers_created_at'),
        'spectrum_reducers',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'spectrum_reducers_forward_ind',
        'spectrum_reducers',
        ['spectr_id', 'user_id'],
        unique=True,
    )
    op.create_index(
        'spectrum_reducers_reverse_ind',
        'spectrum_reducers',
        ['user_id', 'spectr_id'],
        unique=False,
    )
    op.create_table(
        'stream_photometry',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('stream_id', sa.Integer(), nullable=False),
        sa.Column('photometr_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['photometr_id'], ['photometry.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        op.f('ix_stream_photometry_created_at'),
        'stream_photometry',
        ['created_at'],
        unique=False,
    )
    op.create_index(
        'stream_photometry_forward_ind',
        'stream_photometry',
        ['stream_id', 'photometr_id'],
        unique=True,
    )
    op.create_index(
        'stream_photometry_reverse_ind',
        'stream_photometry',
        ['photometr_id', 'stream_id'],
        unique=False,
    )
    op.create_table(
        'group_comments_on_spectra',
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.Column('comments_on_spectr_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['comments_on_spectr_id'], ['comments_on_spectra.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'group_comments_on_spectra_forward_ind',
        'group_comments_on_spectra',
        ['group_id', 'comments_on_spectr_id'],
        unique=True,
    )
    op.create_index(
        'group_comments_on_spectra_reverse_ind',
        'group_comments_on_spectra',
        ['comments_on_spectr_id', 'group_id'],
        unique=False,
    )
    op.create_index(
        op.f('ix_group_comments_on_spectra_created_at'),
        'group_comments_on_spectra',
        ['created_at'],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f('ix_group_comments_on_spectra_created_at'),
        table_name='group_comments_on_spectra',
    )
    op.drop_index(
        'group_comments_on_spectra_reverse_ind', table_name='group_comments_on_spectra'
    )
    op.drop_index(
        'group_comments_on_spectra_forward_ind', table_name='group_comments_on_spectra'
    )
    op.drop_table('group_comments_on_spectra')
    op.drop_index('stream_photometry_reverse_ind', table_name='stream_photometry')
    op.drop_index('stream_photometry_forward_ind', table_name='stream_photometry')
    op.drop_index(
        op.f('ix_stream_photometry_created_at'), table_name='stream_photometry'
    )
    op.drop_table('stream_photometry')
    op.drop_index('spectrum_reducers_reverse_ind', table_name='spectrum_reducers')
    op.drop_index('spectrum_reducers_forward_ind', table_name='spectrum_reducers')
    op.drop_index(
        op.f('ix_spectrum_reducers_created_at'), table_name='spectrum_reducers'
    )
    op.drop_table('spectrum_reducers')
    op.drop_index('spectrum_observers_reverse_ind', table_name='spectrum_observers')
    op.drop_index('spectrum_observers_forward_ind', table_name='spectrum_observers')
    op.drop_index(
        op.f('ix_spectrum_observers_created_at'), table_name='spectrum_observers'
    )
    op.drop_table('spectrum_observers')
    op.drop_index(op.f('ix_group_spectra_created_at'), table_name='group_spectra')
    op.drop_index('group_spectra_reverse_ind', table_name='group_spectra')
    op.drop_index('group_spectra_forward_ind', table_name='group_spectra')
    op.drop_table('group_spectra')
    op.drop_index(op.f('ix_group_photometry_created_at'), table_name='group_photometry')
    op.drop_index('group_photometry_reverse_ind', table_name='group_photometry')
    op.drop_index('group_photometry_forward_ind', table_name='group_photometry')
    op.drop_table('group_photometry')
    op.drop_index(
        op.f('ix_comments_on_spectra_spectrum_id'), table_name='comments_on_spectra'
    )
    op.drop_index(
        op.f('ix_comments_on_spectra_obj_id'), table_name='comments_on_spectra'
    )
    op.drop_index(
        op.f('ix_comments_on_spectra_created_at'), table_name='comments_on_spectra'
    )
    op.drop_index(
        op.f('ix_comments_on_spectra_author_id'), table_name='comments_on_spectra'
    )
    op.drop_table('comments_on_spectra')
    op.drop_index(op.f('ix_spectra_owner_id'), table_name='spectra')
    op.drop_index(op.f('ix_spectra_obj_id'), table_name='spectra')
    op.drop_index(op.f('ix_spectra_instrument_id'), table_name='spectra')
    op.drop_index(op.f('ix_spectra_created_at'), table_name='spectra')
    op.drop_table('spectra')
    op.drop_index('request_groups_reverse_ind', table_name='request_groups')
    op.drop_index('request_groups_forward_ind', table_name='request_groups')
    op.drop_index(op.f('ix_request_groups_created_at'), table_name='request_groups')
    op.drop_table('request_groups')
    op.drop_index(op.f('ix_photometry_owner_id'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_origin'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_obj_id'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_nested'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_mjd'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_instrument_id'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_followup_request_id'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_created_at'), table_name='photometry')
    op.drop_index(op.f('ix_photometry_assignment_id'), table_name='photometry')
    op.drop_index('deduplication_index', table_name='photometry')
    op.drop_table('photometry')
    op.drop_index(
        op.f('ix_facilitytransactions_initiator_id'), table_name='facilitytransactions'
    )
    op.drop_index(
        op.f('ix_facilitytransactions_followup_request_id'),
        table_name='facilitytransactions',
    )
    op.drop_index(
        op.f('ix_facilitytransactions_created_at'), table_name='facilitytransactions'
    )
    op.drop_table('facilitytransactions')
    op.drop_index(
        op.f('ix_localizationtiles_nested_lo'), table_name='localizationtiles'
    )
    op.drop_index(
        op.f('ix_localizationtiles_created_at'), table_name='localizationtiles'
    )
    op.drop_table('localizationtiles')
    op.drop_index(op.f('ix_followuprequests_status'), table_name='followuprequests')
    op.drop_index(
        op.f('ix_followuprequests_requester_id'), table_name='followuprequests'
    )
    op.drop_index(op.f('ix_followuprequests_obj_id'), table_name='followuprequests')
    op.drop_index(op.f('ix_followuprequests_created_at'), table_name='followuprequests')
    op.drop_index(
        op.f('ix_followuprequests_allocation_id'), table_name='followuprequests'
    )
    op.drop_table('followuprequests')
    op.drop_index(
        op.f('ix_classicalassignments_run_id'), table_name='classicalassignments'
    )
    op.drop_index(
        op.f('ix_classicalassignments_requester_id'), table_name='classicalassignments'
    )
    op.drop_index(
        op.f('ix_classicalassignments_obj_id'), table_name='classicalassignments'
    )
    op.drop_index(
        op.f('ix_classicalassignments_last_modified_by_id'),
        table_name='classicalassignments',
    )
    op.drop_index(
        op.f('ix_classicalassignments_created_at'), table_name='classicalassignments'
    )
    op.drop_table('classicalassignments')
    op.drop_index('user_invitations_reverse_ind', table_name='user_invitations')
    op.drop_index('user_invitations_forward_ind', table_name='user_invitations')
    op.drop_index(op.f('ix_user_invitations_created_at'), table_name='user_invitations')
    op.drop_table('user_invitations')
    op.drop_index('token_acls_reverse_ind', table_name='token_acls')
    op.drop_index('token_acls_forward_ind', table_name='token_acls')
    op.drop_index(op.f('ix_token_acls_created_at'), table_name='token_acls')
    op.drop_table('token_acls')
    op.drop_index('stream_invitations_reverse_ind', table_name='stream_invitations')
    op.drop_index('stream_invitations_forward_ind', table_name='stream_invitations')
    op.drop_index(
        op.f('ix_stream_invitations_created_at'), table_name='stream_invitations'
    )
    op.drop_table('stream_invitations')
    op.drop_index(op.f('ix_observingruns_owner_id'), table_name='observingruns')
    op.drop_index(op.f('ix_observingruns_instrument_id'), table_name='observingruns')
    op.drop_index(op.f('ix_observingruns_group_id'), table_name='observingruns')
    op.drop_index(op.f('ix_observingruns_created_at'), table_name='observingruns')
    op.drop_index(op.f('ix_observingruns_calendar_date'), table_name='observingruns')
    op.drop_table('observingruns')
    op.drop_index(op.f('ix_localizations_sent_by_id'), table_name='localizations')
    op.drop_index(
        op.f('ix_localizations_localization_name'), table_name='localizations'
    )
    op.drop_index(op.f('ix_localizations_dateobs'), table_name='localizations')
    op.drop_index(op.f('ix_localizations_created_at'), table_name='localizations')
    op.drop_table('localizations')
    op.drop_index(
        op.f('ix_group_notifications_created_at'), table_name='group_notifications'
    )
    op.drop_index('group_notifications_reverse_ind', table_name='group_notifications')
    op.drop_index('group_notifications_forward_ind', table_name='group_notifications')
    op.drop_table('group_notifications')
    op.drop_index(
        op.f('ix_group_invitations_created_at'), table_name='group_invitations'
    )
    op.drop_index('group_invitations_reverse_ind', table_name='group_invitations')
    op.drop_index('group_invitations_forward_ind', table_name='group_invitations')
    op.drop_table('group_invitations')
    op.drop_index(op.f('ix_group_comments_created_at'), table_name='group_comments')
    op.drop_index('group_comments_reverse_ind', table_name='group_comments')
    op.drop_index('group_comments_forward_ind', table_name='group_comments')
    op.drop_table('group_comments')
    op.drop_index(
        op.f('ix_group_classifications_created_at'), table_name='group_classifications'
    )
    op.drop_index(
        'group_classifications_reverse_ind', table_name='group_classifications'
    )
    op.drop_index(
        'group_classifications_forward_ind', table_name='group_classifications'
    )
    op.drop_table('group_classifications')
    op.drop_index(
        op.f('ix_group_annotations_created_at'), table_name='group_annotations'
    )
    op.drop_index('group_annotations_reverse_ind', table_name='group_annotations')
    op.drop_index('group_annotations_forward_ind', table_name='group_annotations')
    op.drop_table('group_annotations')
    op.drop_index(op.f('ix_gcntags_sent_by_id'), table_name='gcntags')
    op.drop_index(op.f('ix_gcntags_dateobs'), table_name='gcntags')
    op.drop_index(op.f('ix_gcntags_created_at'), table_name='gcntags')
    op.drop_table('gcntags')
    op.drop_index(op.f('ix_gcnnotices_sent_by_id'), table_name='gcnnotices')
    op.drop_index(op.f('ix_gcnnotices_ivorn'), table_name='gcnnotices')
    op.drop_index(op.f('ix_gcnnotices_created_at'), table_name='gcnnotices')
    op.drop_table('gcnnotices')
    op.drop_index(op.f('ix_candidates_uploader_id'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_passing_alert_id'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_passed_at'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_obj_id'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_filter_id'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_created_at'), table_name='candidates')
    op.drop_index('candidates_main_index', table_name='candidates')
    op.drop_table('candidates')
    op.drop_index(op.f('ix_allocations_instrument_id'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_group_id'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_created_at'), table_name='allocations')
    op.drop_table('allocations')
    op.drop_index(op.f('ix_weathers_telescope_id'), table_name='weathers')
    op.drop_index(op.f('ix_weathers_created_at'), table_name='weathers')
    op.drop_table('weathers')
    op.drop_index(op.f('ix_usersocialauths_user_id'), table_name='usersocialauths')
    op.drop_index(op.f('ix_usersocialauths_created_at'), table_name='usersocialauths')
    op.drop_table('usersocialauths')
    op.drop_index(op.f('ix_usernotifications_viewed'), table_name='usernotifications')
    op.drop_index(op.f('ix_usernotifications_user_id'), table_name='usernotifications')
    op.drop_index(
        op.f('ix_usernotifications_created_at'), table_name='usernotifications'
    )
    op.drop_table('usernotifications')
    op.drop_index('user_roles_reverse_ind', table_name='user_roles')
    op.drop_index('user_roles_forward_ind', table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_created_at'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index('user_acls_reverse_ind', table_name='user_acls')
    op.drop_index('user_acls_forward_ind', table_name='user_acls')
    op.drop_index(op.f('ix_user_acls_created_at'), table_name='user_acls')
    op.drop_table('user_acls')
    op.drop_index(op.f('ix_tokens_created_at'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_thumbnails_obj_id'), table_name='thumbnails')
    op.drop_index(op.f('ix_thumbnails_created_at'), table_name='thumbnails')
    op.drop_table('thumbnails')
    op.drop_index('stream_users_reverse_ind', table_name='stream_users')
    op.drop_index('stream_users_forward_ind', table_name='stream_users')
    op.drop_index(op.f('ix_stream_users_created_at'), table_name='stream_users')
    op.drop_table('stream_users')
    op.drop_index(op.f('ix_sourceviews_obj_id'), table_name='sourceviews')
    op.drop_index(op.f('ix_sourceviews_created_at'), table_name='sourceviews')
    op.drop_table('sourceviews')
    op.drop_index('sources_reverse_ind', table_name='sources')
    op.drop_index('sources_forward_ind', table_name='sources')
    op.drop_index(op.f('ix_sources_unsaved_by_id'), table_name='sources')
    op.drop_index(op.f('ix_sources_saved_by_id'), table_name='sources')
    op.drop_index(op.f('ix_sources_saved_at'), table_name='sources')
    op.drop_index(op.f('ix_sources_created_at'), table_name='sources')
    op.drop_table('sources')
    op.drop_index(
        op.f('ix_sourcenotifications_source_id'), table_name='sourcenotifications'
    )
    op.drop_index(
        op.f('ix_sourcenotifications_sent_by_id'), table_name='sourcenotifications'
    )
    op.drop_index(
        op.f('ix_sourcenotifications_created_at'), table_name='sourcenotifications'
    )
    op.drop_table('sourcenotifications')
    op.drop_index('role_acls_reverse_ind', table_name='role_acls')
    op.drop_index('role_acls_forward_ind', table_name='role_acls')
    op.drop_index(op.f('ix_role_acls_created_at'), table_name='role_acls')
    op.drop_table('role_acls')
    op.drop_index('listings_reverse_index', table_name='listings')
    op.drop_index('listings_main_index', table_name='listings')
    op.drop_index(op.f('ix_listings_user_id'), table_name='listings')
    op.drop_index(op.f('ix_listings_obj_id'), table_name='listings')
    op.drop_index(op.f('ix_listings_list_name'), table_name='listings')
    op.drop_index(op.f('ix_listings_created_at'), table_name='listings')
    op.drop_table('listings')
    op.drop_index(op.f('ix_invitations_created_at'), table_name='invitations')
    op.drop_table('invitations')
    op.drop_index(op.f('ix_instruments_telescope_id'), table_name='instruments')
    op.drop_index(op.f('ix_instruments_created_at'), table_name='instruments')
    op.drop_table('instruments')
    op.drop_index(
        op.f('ix_groupadmissionrequests_user_id'), table_name='groupadmissionrequests'
    )
    op.drop_index(
        op.f('ix_groupadmissionrequests_group_id'), table_name='groupadmissionrequests'
    )
    op.drop_index(
        op.f('ix_groupadmissionrequests_created_at'),
        table_name='groupadmissionrequests',
    )
    op.drop_table('groupadmissionrequests')
    op.drop_index(op.f('ix_group_users_created_at'), table_name='group_users')
    op.drop_index('group_users_reverse_ind', table_name='group_users')
    op.drop_index('group_users_forward_ind', table_name='group_users')
    op.drop_table('group_users')
    op.drop_index(op.f('ix_group_taxonomy_created_at'), table_name='group_taxonomy')
    op.drop_index('group_taxonomy_reverse_ind', table_name='group_taxonomy')
    op.drop_index('group_taxonomy_forward_ind', table_name='group_taxonomy')
    op.drop_table('group_taxonomy')
    op.drop_index(op.f('ix_group_streams_created_at'), table_name='group_streams')
    op.drop_index('group_streams_reverse_ind', table_name='group_streams')
    op.drop_index('group_streams_forward_ind', table_name='group_streams')
    op.drop_table('group_streams')
    op.drop_index(op.f('ix_gcnevents_sent_by_id'), table_name='gcnevents')
    op.drop_index(op.f('ix_gcnevents_created_at'), table_name='gcnevents')
    op.drop_table('gcnevents')
    op.drop_index(op.f('ix_filters_stream_id'), table_name='filters')
    op.drop_index(op.f('ix_filters_group_id'), table_name='filters')
    op.drop_index(op.f('ix_filters_created_at'), table_name='filters')
    op.drop_table('filters')
    op.drop_index(op.f('ix_comments_obj_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_created_at'), table_name='comments')
    op.drop_index(op.f('ix_comments_author_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_classifications_taxonomy_id'), table_name='classifications')
    op.drop_index(op.f('ix_classifications_probability'), table_name='classifications')
    op.drop_index(op.f('ix_classifications_obj_id'), table_name='classifications')
    op.drop_index(op.f('ix_classifications_created_at'), table_name='classifications')
    op.drop_index(
        op.f('ix_classifications_classification'), table_name='classifications'
    )
    op.drop_index(op.f('ix_classifications_author_id'), table_name='classifications')
    op.drop_table('classifications')
    op.drop_index(op.f('ix_annotations_origin'), table_name='annotations')
    op.drop_index(op.f('ix_annotations_obj_id'), table_name='annotations')
    op.drop_index(op.f('ix_annotations_created_at'), table_name='annotations')
    op.drop_index(op.f('ix_annotations_author_id'), table_name='annotations')
    op.drop_table('annotations')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_telescopes_created_at'), table_name='telescopes')
    op.drop_table('telescopes')
    op.drop_index(op.f('ix_taxonomies_created_at'), table_name='taxonomies')
    op.drop_table('taxonomies')
    op.drop_index(op.f('ix_streams_created_at'), table_name='streams')
    op.drop_table('streams')
    op.drop_index(op.f('ix_roles_created_at'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_partials_token'), table_name='partials')
    op.drop_index(op.f('ix_partials_created_at'), table_name='partials')
    op.drop_table('partials')
    op.drop_index(op.f('ix_objs_redshift'), table_name='objs')
    op.drop_index(op.f('ix_objs_nested'), table_name='objs')
    op.drop_index(op.f('ix_objs_created_at'), table_name='objs')
    op.drop_table('objs')
    op.drop_index(op.f('ix_nonces_created_at'), table_name='nonces')
    op.drop_table('nonces')
    op.drop_index(op.f('ix_groups_single_user_group'), table_name='groups')
    op.drop_index(op.f('ix_groups_private'), table_name='groups')
    op.drop_index(op.f('ix_groups_nickname'), table_name='groups')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_created_at'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_cronjobruns_created_at'), table_name='cronjobruns')
    op.drop_table('cronjobruns')
    op.drop_index(op.f('ix_codes_created_at'), table_name='codes')
    op.drop_index(op.f('ix_codes_code'), table_name='codes')
    op.drop_table('codes')
    op.drop_index(op.f('ix_associations_created_at'), table_name='associations')
    op.drop_table('associations')
    op.drop_index(op.f('ix_acls_created_at'), table_name='acls')
    op.drop_table('acls')
    # ### end Alembic commands ###
